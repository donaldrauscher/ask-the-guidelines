steps:
  # Build container
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/ask-the-guidelines:$COMMIT_SHA'
      - '--build-arg'
      - 'openai_api_key'
      - '$$OPENAI_API_KEY'
      - '.'
    secretEnv: ['OPENAI_API_KEY']
  # Add latest tag
  - name: 'gcr.io/cloud-builders/docker'
    args: ['tag', 'gcr.io/$PROJECT_ID/ask-the-guidelines:$COMMIT_SHA', 'gcr.io/$PROJECT_ID/ask-the-guidelines:latest']
  # Push images to container registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/ask-the-guidelines:$COMMIT_SHA']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/ask-the-guidelines:latest']
  # Deploy on cloud run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'beta'
      - 'run'
      - 'deploy'
      - 'ask-the-guidelines'
      - '--image'
      - 'gcr.io/$PROJECT_ID/ask-the-guidelines:$COMMIT_SHA'
      - '--port'
      - '8501'
      - '--cpu-throttling'
      - '--cpu-boost'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '3'
      - '--region'
      - 'us-central1'
      - '--execution-environment'
      - 'gen2'
  # Route traffic to latest deployment
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'services'
      - 'update-traffic'
      - 'ask-the-guidelines'
      - '--to-latest'
      - '--region'
      - 'us-central1'
images:
  - 'gcr.io/$PROJECT_ID/ask-the-guidelines:$COMMIT_SHA'
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/openai_api_key/versions/1
    env: 'OPENAI_API_KEY'
